import DashboardLayout from "@/layouts/DashboardLayout";

import "../globals.css";
import type { Metadata } from "next";
import { Inter, Poppins } from "next/font/google";
import { AnimatePresence } from "framer-motion";
import { getServerSession } from "next-auth";
import { authOptions } from "../api/auth/[...nextauth]/route";
import EmployeeController from "@/controllers/employee";
import { User } from "@/models/User";
import { store } from "@/store";
import { setUser } from "@/store/userSlice";
import Preloader from "../employer/component/Preloader";
import ClientController from "@/controllers/employerAuth";
import Providers from "@/store/Providers";

const inter = Inter({
  subsets: ["latin"],
  variable: "--font-inter",
});
const poppins = Poppins({
  subsets: ["latin"],
  variable: "--font-poppins-extra-bold",
  display: "swap",
  weight: "800",
});

const poppinsRegular = Poppins({
  subsets: ["latin"],
  variable: "--font-poppins-extra-bold",
  display: "swap",
  weight: "500",
});
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const session = await getServerSession(authOptions);
  // console.log("secondApp", session?.user);

  const controller = new ClientController(session?.user?.image?.toString());

  // console.log("first token here :", session?.user?.image?.toString());
  const user: User = await controller.employerme();

  // console.log(" user ::", user);
  await store.dispatch(
    setUser({ ...user, accessToken: session?.user?.image?.toString() })
  );

  return (
    <html lang="en">
      <body className={poppinsRegular.className}>
        <Preloader user={{ ...user, accessToken: session?.user?.image }} />
        <Providers>{children}</Providers>
      </body>
    </html>
  );
}
